// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lhsync.proto

package lhsync_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FileData struct {
	PathKey              string   `protobuf:"bytes,1,opt,name=pathKey,proto3" json:"pathKey,omitempty"`
	RelPath              string   `protobuf:"bytes,2,opt,name=RelPath,proto3" json:"RelPath,omitempty"`
	FSize                int64    `protobuf:"varint,3,opt,name=fSize,proto3" json:"fSize,omitempty"`
	FMt                  int64    `protobuf:"varint,4,opt,name=fMt,proto3" json:"fMt,omitempty"`
	FMode                uint32   `protobuf:"varint,5,opt,name=fMode,proto3" json:"fMode,omitempty"`
	FMd5                 string   `protobuf:"bytes,6,opt,name=fMd5,proto3" json:"fMd5,omitempty"`
	FType                bool     `protobuf:"varint,7,opt,name=fType,proto3" json:"fType,omitempty"`
	FOp                  uint32   `protobuf:"varint,8,opt,name=fOp,proto3" json:"fOp,omitempty"`
	FContent             []byte   `protobuf:"bytes,9,opt,name=fContent,proto3" json:"fContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileData) Reset()         { *m = FileData{} }
func (m *FileData) String() string { return proto.CompactTextString(m) }
func (*FileData) ProtoMessage()    {}
func (*FileData) Descriptor() ([]byte, []int) {
	return fileDescriptor_lhsync_24824f026b1b10c6, []int{0}
}
func (m *FileData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileData.Unmarshal(m, b)
}
func (m *FileData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileData.Marshal(b, m, deterministic)
}
func (dst *FileData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileData.Merge(dst, src)
}
func (m *FileData) XXX_Size() int {
	return xxx_messageInfo_FileData.Size(m)
}
func (m *FileData) XXX_DiscardUnknown() {
	xxx_messageInfo_FileData.DiscardUnknown(m)
}

var xxx_messageInfo_FileData proto.InternalMessageInfo

func (m *FileData) GetPathKey() string {
	if m != nil {
		return m.PathKey
	}
	return ""
}

func (m *FileData) GetRelPath() string {
	if m != nil {
		return m.RelPath
	}
	return ""
}

func (m *FileData) GetFSize() int64 {
	if m != nil {
		return m.FSize
	}
	return 0
}

func (m *FileData) GetFMt() int64 {
	if m != nil {
		return m.FMt
	}
	return 0
}

func (m *FileData) GetFMode() uint32 {
	if m != nil {
		return m.FMode
	}
	return 0
}

func (m *FileData) GetFMd5() string {
	if m != nil {
		return m.FMd5
	}
	return ""
}

func (m *FileData) GetFType() bool {
	if m != nil {
		return m.FType
	}
	return false
}

func (m *FileData) GetFOp() uint32 {
	if m != nil {
		return m.FOp
	}
	return 0
}

func (m *FileData) GetFContent() []byte {
	if m != nil {
		return m.FContent
	}
	return nil
}

type SyncResp struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncResp) Reset()         { *m = SyncResp{} }
func (m *SyncResp) String() string { return proto.CompactTextString(m) }
func (*SyncResp) ProtoMessage()    {}
func (*SyncResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_lhsync_24824f026b1b10c6, []int{1}
}
func (m *SyncResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncResp.Unmarshal(m, b)
}
func (m *SyncResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncResp.Marshal(b, m, deterministic)
}
func (dst *SyncResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncResp.Merge(dst, src)
}
func (m *SyncResp) XXX_Size() int {
	return xxx_messageInfo_SyncResp.Size(m)
}
func (m *SyncResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncResp.DiscardUnknown(m)
}

var xxx_messageInfo_SyncResp proto.InternalMessageInfo

func (m *SyncResp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*FileData)(nil), "lhsync_pb.FileData")
	proto.RegisterType((*SyncResp)(nil), "lhsync_pb.SyncResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LhSyncClient is the client API for LhSync service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LhSyncClient interface {
	SyncFile(ctx context.Context, in *FileData, opts ...grpc.CallOption) (*SyncResp, error)
}

type lhSyncClient struct {
	cc *grpc.ClientConn
}

func NewLhSyncClient(cc *grpc.ClientConn) LhSyncClient {
	return &lhSyncClient{cc}
}

func (c *lhSyncClient) SyncFile(ctx context.Context, in *FileData, opts ...grpc.CallOption) (*SyncResp, error) {
	out := new(SyncResp)
	err := c.cc.Invoke(ctx, "/lhsync_pb.LhSync/SyncFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LhSyncServer is the server API for LhSync service.
type LhSyncServer interface {
	SyncFile(context.Context, *FileData) (*SyncResp, error)
}

func RegisterLhSyncServer(s *grpc.Server, srv LhSyncServer) {
	s.RegisterService(&_LhSync_serviceDesc, srv)
}

func _LhSync_SyncFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LhSyncServer).SyncFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lhsync_pb.LhSync/SyncFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LhSyncServer).SyncFile(ctx, req.(*FileData))
	}
	return interceptor(ctx, in, info, handler)
}

var _LhSync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lhsync_pb.LhSync",
	HandlerType: (*LhSyncServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SyncFile",
			Handler:    _LhSync_SyncFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lhsync.proto",
}

func init() { proto.RegisterFile("lhsync.proto", fileDescriptor_lhsync_24824f026b1b10c6) }

var fileDescriptor_lhsync_24824f026b1b10c6 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x31, 0x69, 0x53, 0xe7, 0x54, 0x24, 0x74, 0x30, 0x9c, 0x2a, 0x06, 0x2b, 0x93, 0xa7,
	0x0c, 0x20, 0x98, 0x91, 0x40, 0x2c, 0x10, 0x81, 0x5c, 0x76, 0x94, 0xb6, 0x0e, 0xa9, 0x14, 0x12,
	0x8b, 0x78, 0x09, 0xbf, 0x93, 0x1f, 0x84, 0x7c, 0x6e, 0x2a, 0xb6, 0xf7, 0xf9, 0xbd, 0x7b, 0x92,
	0x1f, 0x2c, 0xdb, 0x66, 0x18, 0xbb, 0x6d, 0xe1, 0xbe, 0x7b, 0xdf, 0x63, 0x16, 0xe9, 0xc3, 0x6d,
	0xf2, 0x5f, 0x01, 0xf2, 0x69, 0xdf, 0xda, 0xc7, 0xca, 0x57, 0x48, 0xb0, 0x70, 0x95, 0x6f, 0x9e,
	0xed, 0x48, 0x42, 0x09, 0x9d, 0x99, 0x09, 0x83, 0x63, 0x6c, 0xfb, 0x56, 0xf9, 0x86, 0x4e, 0xa3,
	0x73, 0x40, 0xbc, 0x84, 0x79, 0xbd, 0xde, 0xff, 0x58, 0x4a, 0x94, 0xd0, 0x89, 0x89, 0x80, 0xe7,
	0x90, 0xd4, 0xa5, 0xa7, 0x19, 0xbf, 0x05, 0xc9, 0xb9, 0xb2, 0xdf, 0x59, 0x9a, 0x2b, 0xa1, 0xcf,
	0x4c, 0x04, 0x44, 0x98, 0xd5, 0xe5, 0xee, 0x96, 0x52, 0x2e, 0x65, 0xcd, 0xc9, 0xf7, 0xd1, 0x59,
	0x5a, 0x28, 0xa1, 0xa5, 0x89, 0xc0, 0x8d, 0xaf, 0x8e, 0x24, 0x5f, 0x07, 0x89, 0x2b, 0x90, 0xf5,
	0x43, 0xdf, 0x79, 0xdb, 0x79, 0xca, 0x94, 0xd0, 0x4b, 0x73, 0xe4, 0xfc, 0x0a, 0xe4, 0x7a, 0xec,
	0xb6, 0xc6, 0x0e, 0x2e, 0x5c, 0x7e, 0x0d, 0x9f, 0x87, 0x1f, 0x05, 0x79, 0x7d, 0x0f, 0xe9, 0x4b,
	0x13, 0x7c, 0xbc, 0x8b, 0xb9, 0xb0, 0x00, 0x5e, 0x14, 0xc7, 0x59, 0x8a, 0x69, 0x92, 0xd5, 0xff,
	0xc7, 0xa9, 0x31, 0x3f, 0xd9, 0xa4, 0x3c, 0xe4, 0xcd, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0f,
	0x08, 0x90, 0xd3, 0x58, 0x01, 0x00, 0x00,
}
